<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>CVE-2022-42432 on msh1307</title>
    <link>https://msh1307.kr/tags/cve-2022-42432/</link>
    <description>Recent content in CVE-2022-42432 on msh1307</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://msh1307.kr/tags/cve-2022-42432/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CVE-2022-42432 Linux kernel netfilter</title>
      <link>https://msh1307.kr/blog/cve-2022-42432-linux-kernel-netfilter/</link>
      <pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://msh1307.kr/blog/cve-2022-42432-linux-kernel-netfilter/</guid>
      <description>CVE-2022-42432 struct expr_ops expr_ops_osf = { .name	= &amp;#34;osf&amp;#34;, .alloc_len	= sizeof(struct nftnl_expr_osf), .max_attr	= NFTA_OSF_MAX, .set	= nftnl_expr_osf_set, .get	= nftnl_expr_osf_get, .parse	= nftnl_expr_osf_parse, .build	= nftnl_expr_osf_build, .output	= nftnl_expr_osf_snprintf, }; libnftnl 소스코드에서 osf expr도 지원한다는 것을 알 수 있었다.
struct nftnl_expr_osf { enum nft_registers	dreg; uint8_t	ttl; uint32_t	flags; }; static int nftnl_expr_osf_set(struct nftnl_expr *e, uint16_t type, const void *data, uint32_t data_len) { struct nftnl_expr_osf *osf = nftnl_expr_data(e); switch(type) { case NFTNL_EXPR_OSF_DREG: memcpy(&amp;amp;osf-&amp;gt;dreg, data, sizeof(osf-&amp;gt;dreg)); break; case NFTNL_EXPR_OSF_TTL: memcpy(&amp;amp;osf-&amp;gt;ttl, data, sizeof(osf-&amp;gt;ttl)); break; case NFTNL_EXPR_OSF_FLAGS: memcpy(&amp;amp;osf-&amp;gt;flags, data, sizeof(osf-&amp;gt;flags)); break; } return 0; } nf tables에서 expr 추가하듯이 추가하면 된다.</description>
    </item>
    
  </channel>
</rss>
